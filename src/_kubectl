#compdef kubectl
# inspired by https://github.com/zsh-users/zsh-completions/blob/master/src/_golang
#             https://github.com/git/git/blob/master/contrib/completion/git-completion.zsh

typeset -A opt_args

__kubectl_arguments() {
    if zstyle -T ":completion:${curcontext}:" option-stacking; then
        print -- -s
    fi
}

_kubectl(){

  local -a cmds
  cmds=(
  'create:Create a resource from a file or from stdin.'
  'expose:Take a replication controller, service, deployment or pod and expose it as a new'
  'run:Run a particular image on the cluster'
  'set:Set specific features on objects'
  'explain:Documentation of resources'
  'get:Display one or many resources'
  'edit:Edit a resource on the server'
  'delete:Delete resources by filenames, stdin, resources and names, or by resources and label selector'
  'rollout:Manage the rollout of a resource'
  'rolling-update:Perform a rolling update of the given ReplicationController'
  'scale:Set a new size for a Deployment, ReplicaSet, Replication Controller, or Job'
  'autoscale:Auto-scale a Deployment, ReplicaSet, or ReplicationController'
  'certificate:Modify certificate resources.'
  'cluster-info:Display cluster info'
  'top:Display Resource (CPU/Memory/Storage) usage.'
  'cordon:Mark node as unschedulable'
  'uncordon:Mark node as schedulable'
  'drain:Drain node in preparation for maintenance'
  'taint:Update the taints on one or more nodes'
  'describe:Show details of a specific resource or group of resources'
  'logs:Print the logs for a container in a pod'
  'attach:Attach to a running container'
  'exec:Execute a command in a container'
  'port-forward:Forward one or more local ports to a pod'
  'proxy:Run a proxy to the Kubernetes API server'
  'cp:Copy files and directories to and from containers.'
  'auth:Inspect authorization'
  'apply:Apply a configuration to a resource by filename or stdin'
  'patch:Update field(s) of a resource using strategic merge patch'
  'replace:Replace a resource by filename or stdin'
  'convert:Convert config files between different API versions'
  'label:Update the labels on a resource'
  'annotate:Update the annotations on a resource'
  'completion:Output shell completion code for the specified shell (bash or zsh)'
  'api-versions:Print the supported API versions on the server, in the form of group/version'
  'config:Modify kubeconfig files'
  'help:Help about any command'
  'plugin:Runs a command-line plugin'
  'version:Print the client and server version information'
  )

  _arguments : \
    '--alsologtostderr[log to standard error as well as files]' \
    '--as[Username to impersonate for the operation]' \
    '--as-group[Group to impersonate for the operation, this flag can be repeated to specify multiple groups.]' \
    '--cache-dir[Default HTTP cache directory]' \
    '--certificate-authority[ Path to a cert file for the certificate authority]' \
    '--client-certificate[Path to a client certificate file for TLS]' \
    '--client-key[Path to a client key file for TLS]' \
    '--cluster[The name of the kubeconfig cluster to use]' \
    '--context[The name of the kubeconfig context to use]' \
    '--help[Get more information about a help]' \
    '--insecure-skip-tls-verify[If true, the server'\''s certificate will not be checked for validity. This will make your HTTPS connections insecure]' \
    '--kubeconfig[Path to the kubeconfig file to use for CLI requests.]' \
    '--log-backtrace-at[when logging hits line file:N, emit a stack trace]' \
    '--log-dir[If non-empty, write log files in this directory]' \
    '--log-flush-frequency[Maximum number of seconds between log flushes]' \
    '--logtostderr=true[log to standard error instead of files]' \
    '--match-server-version[Require server version to match client version]' \
    '--namespace[If present, the namespace scope for this CLI request]' \
    '--password[Password for basic authentication to the API server]' \
    '--request-timeout[The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don'\''t timeout requests.]' \
    '--server[The address and port of the Kubernetes API server]' \
    '--stderrthreshold[logs at or above this threshold go to stderr]' \
    '--token[Bearer token for authentication to the API server]' \
    '--user[The name of the kubeconfig user to use]' \
    '--username[Username for basic authentication to the API server]' \
    '--v[level for V logs]' \
    '--vmodule[comma-separated list of pattern=N settings for file-filtered logging]' \
    "1: :{_describe 'cmd' cmds}" \
    '*:: :->args'

  case $state in
    args)
        case $words[1] in
          create)

            local -a create_cmds
            create_cmds=(
            'clusterrole:Create a ClusterRole.'
            'clusterrolebinding:Create a ClusterRoleBinding for a particular ClusterRole'
            'configmap:Create a configmap from a local file, directory or literal value'
            'deployment:Create a deployment with the specified name.'
            'job:Create a job with the specified name.'
            'namespace:Create a namespace with the specified name'
            'poddisruptionbudget:Create a pod disruption budget with the specified name.'
            'priorityclass:Create a priorityclass with the specified name.'
            'quota:Create a quota with the specified name.'
            'role:Create a role with single rule.'
            'rolebinding:Create a RoleBinding for a particular Role or ClusterRole'
            'secret:Create a secret using specified subcommand'
            'service:Create a service using specified subcommand.'
            'serviceaccount:Create a service account with the specified name'
            )

            _arguments : \
              '--allow-missing-template-keys=true[If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.]' \
              '--dry-run[If true, only print the object that would be sent, without sending it.]' \
              '--edit[Edit the API resource before creating]' \
              '--filename[Filename, directory, or URL to files to use to create the resource]' \
              '--include-extended-apis[If true, include definitions of new APIs via calls to the API server. \[default true\]]' \
'--no-headers[When using the default or custom-column output format, don'\''t print headers (default print headers).]' \
              '--output[Output format. One of:json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=...See custom columns \[http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns\], golang template \[http://golang.org/pkg/text/template/#pkg-overview\] and jsonpath template \[http://kubernetes.io/docs/user-guide/jsonpath\].]' \
              '--raw[Raw URI to POST to the server.  Uses the transport specified by the kubeconfig file.]' \
              '--record[Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists.]' \
              '--recursive[Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.]' \
              '--save-config[If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.]' \
              '--selector[Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2)]' \
              '--show-all[When printing, show all resources (default show all pods including terminated one.)]' \
              '--show-labels[When printing, show all labels as the last column (default hide labels column)]' \
              '--sort-by[If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '\''{.metadata.name}'\''). The field in the API resource specified by this JSONPath expression must be an integer or a string.]' \
              '--template[Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates \[http://golang.org/pkg/text/template/#pkg-overview\].]' \
              '--validate[If true, use a schema to validate the input before sending it]' \
              '--windows-line-endings[Only relevant if --edit=true. Defaults to the line ending native to your platform.]' \
              "1: :{_describe 'create_cmd' create_cmds}"
              ;;
        esac
        ;;
  esac
}
