#compdef kubectl
# inspired by https://github.com/zsh-users/zsh-completions/blob/master/src/_golang

typeset -A opt_args

_kubectl(){

  local -a cmds global_flags
  cmds=(
  'create:Create a resource from a file or from stdin.'
  'expose:Take a replication controller, service, deployment or pod and expose it as a new'
  'run:Run a particular image on the cluster'
  'set:Set specific features on objects'
  'explain:Documentation of resources'
  'get:Display one or many resources'
  'edit:Edit a resource on the server'
  'delete:Delete resources by filenames, stdin, resources and names, or by resources and label selector'
  'rollout:Manage the rollout of a resource'
  'rolling-update:Perform a rolling update of the given ReplicationController'
  'scale:Set a new size for a Deployment, ReplicaSet, Replication Controller, or Job'
  'autoscale:Auto-scale a Deployment, ReplicaSet, or ReplicationController'
  'certificate:Modify certificate resources.'
  'cluster-info:Display cluster info'
  'top:Display Resource (CPU/Memory/Storage) usage.'
  'cordon:Mark node as unschedulable'
  'uncordon:Mark node as schedulable'
  'drain:Drain node in preparation for maintenance'
  'taint:Update the taints on one or more nodes'
  'describe:Show details of a specific resource or group of resources'
  'logs:Print the logs for a container in a pod'
  'attach:Attach to a running container'
  'exec:Execute a command in a container'
  'port-forward:Forward one or more local ports to a pod'
  'proxy:Run a proxy to the Kubernetes API server'
  'cp:Copy files and directories to and from containers.'
  'auth:Inspect authorization'
  'apply:Apply a configuration to a resource by filename or stdin'
  'patch:Update field(s) of a resource using strategic merge patch'
  'replace:Replace a resource by filename or stdin'
  'convert:Convert config files between different API versions'
  'label:Update the labels on a resource'
  'annotate:Update the annotations on a resource'
  'completion:Output shell completion code for the specified shell (bash or zsh)'
  'api-versions:Print the supported API versions on the server, in the form of group/version'
  'config:Modify kubeconfig files'
  'help:Help about any command'
  'plugin:Runs a command-line plugin'
  'version:Print the client and server version information'
  )

  _arguments \
    "1: :{_describe 'cmd' cmds}" \
    '*:: :->args'

  case $state in
    args)
      global_flags=(
        '--alsologtostderr[log to standard error as well as files]'
        '--as[Username to impersonate for the operation]'
        '--as-group[Group to impersonate for the operation, this flag can be repeated to specify multiple groups.]'
        '--cache-dir[Default HTTP cache directory]'
        '--certificate-authority[ Path to a cert file for the certificate authority]'
        '--client-certificate[Path to a client certificate file for TLS]'
        '--client-key[Path to a client key file for TLS]'
        '--cluster[The name of the kubeconfig cluster to use]'
        '--context[The name of the kubeconfig context to use]'
        '--insecure-skip-tls-verify[If true, the server'\''s certificate will not be checked for validity. This will make your HTTPS connections insecure]'
        '--kubeconfig[Path to the kubeconfig file to use for CLI requests.]'
        '--log-backtrace-at[when logging hits line file:N, emit a stack trace]'
        '--log-dir[If non-empty, write log files in this directory]'
        '--log-flush-frequency[Maximum number of seconds between log flushes]'
        '--logtostderr=true[log to standard error instead of files]'
        '--match-server-version[Require server version to match client version]'
        '-n, --namespace[If present, the namespace scope for this CLI request]'
        '--password[Password for basic authentication to the API server]'
        '--request-timeout[The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don'\''t timeout requests.]'
        '-s, --server[The address and port of the Kubernetes API server]'
        '--stderrthreshold[logs at or above this threshold go to stderr]'
        '--token[Bearer token for authentication to the API server]'
        '--user[The name of the kubeconfig user to use]'
        '--username[Username for basic authentication to the API server]'
        '-v, --v[level for V logs]'
        '--vmodule[comma-separated list of pattern=N settings for file-filtered logging]'
        )
  esac
}
